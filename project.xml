<project
    name = "fty-scripts-rest"
    description = "Scripts REST API"
    script = "zproject.gsl"
    license = "Eaton Proprietary License"
    url = "http://pqsoftware.eaton.com/"
    email = "EatonProductFeedback@Eaton.com"
    >

    <!-- Note: Eaton proprietary components do not make Travis recipes,
         but do store and (in other teams) use the CMake build recipes -->
    <target name = "debian" />
    <target name = "redhat" />
    <target name = "jenkins" >
        <option name = "agent_label" value = "devel-image-ipm_1.4 &amp;&amp; x86_64" />
        <option name = "triggers_pollSCM" value = "H/2 * * * *" />
        <option name = "test_cppcheck" value = "1" />
        <option name = "build_docs" value = "1" />
        <option name = "dist_docs" value = "1" />
        <option name = "use_test_retry" value = "3" />
        <option name = "use_test_timeout" value = "30" />
    </target>

    <classfilename keep-tree = "true" use-cxx = "true" pretty-print = "no" source-extension = "cc" />
    <include filename = "license.xml" />
    <version major = "1" minor = "0" patch = "0" />
    <abi current = "1" revision = "0" age = "0" />

    <use project = "cxxtools" test="cxxtools::Utf8Codec::Utf8Codec" header="cxxtools/allocator.h"
        repository = "https://github.com/42ity/cxxtools.git"
        release = "release/IPM_Infra-1.4"
        />

    <use project = "tntnet"
        header = "tnt/tntnet.h"
        repository = "https://github.com/42ity/tntnet.git"
        release = "release/IPM_Infra-1.4"
        />

    <use project = "fty-common-rest" libname = "libfty_common_rest" header="fty_common_rest.h"
        repository = "https://github.com/42ity/fty-common-rest.git"
        release = "release/IPM_Infra-1.4"
        test = "fty_commmon_selftest" >

        <use project = "log4cplus" header = "log4cplus/logger.h"
            test = "appender_test"
            release = "release/IPM_Infra-1.4"
            repository="https://github.com/42ity/log4cplus.git"
            />

        <use project = "tntnet"
            header = "tnt/tntnet.h"
            repository = "https://github.com/42ity/tntnet.git"
            release = "release/IPM_Infra-1.4"
            />

        <use project = "libsasl2" header = "sasl/sasl.h"
            debian_name="libsasl2-dev"
            redhat_name="cyrus-sasl-devel"
            />
    </use>

    <!-- Note: the .cpp file is generated by ECPP parser during build
         from .ecpp file that is EXTRA_DISTed in Makemodule-local.am,
         and renamed to a .cc file just to abuse pregenerated zproject
         recipes. The "extra" or "bin" tags did not produce the effect
         we needed, since they refer verbatim to the "name" (new GSLs
         are needed to handle this).
         The "license.cc" file generated by zproject should be discarded
         and ignored; the "license.h" is harmless to have and include
         in other generated files. There is no selftest.
     -->
    <class name = "helpers" private="1" state="stable" selftest = "0" />
    <class name = "rest_scripts_GET" private="1" state="stable" selftest = "0" /> <!-- rest_scripts_GET.cc will be generated by eccp -->
    <class name = "rest_scripts_POST" private="1" state="stable" selftest = "0" /> <!-- rest_scripts_POST.cc will be generated by eccp -->
    <class name = "rest_scripts_DELETE" private="1" state="stable" selftest = "0" /> <!-- rest_scripts_DELETE.cc will be generated by eccp -->
    <class name = "rest_scripts_execute_POST" private="1" state="stable" selftest = "0" /> <!-- rest_scripts_execute_POST.cc will be generated by eccp -->
</project>
